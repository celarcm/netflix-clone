{"version":3,"sources":["components/NavigationBar.js","apis/movieDBApi.js","components/Category.js","actions/index.js","components/SearchResults.js","components/CategoriesList.js","components/MovieDetails.js","components/App.js","reducers/index.js","reducers/moviesByGenreReducer.js","reducers/moviesReducer.js","reducers/searchReducer.js","index.js"],"names":["NavigationBar","props","state","redirect","e","key","console","log","target","value","this","setState","to","class","id","href","src","alt","onKeyPress","handleSubmit","bind","React","Component","axios","create","baseURL","params","api_key","Category","genre","title","renderImages","movies","map","movie","poster_path","fetchMoviesByGenre","genreId","connect","ownProps","genreMovies","find","dispatch","a","movieDBApi","get","response","type","payload","data","results","searchResults","length","searchMovies","searchTerm","searchString","CategoriesList","renderCategories","match","SearchResults","genreName","MovieDetails","onClick","history","goBack","aria-hidden","original_title","className","vote_average","vote_count","overview","runtime","movieId","fetchMovie","Number","App","basename","process","path","component","exact","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.86b39e70.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nclass NavigationBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: null\n        }\n    }\n    handleSubmit(e) {\n        if (e.key === 'Enter') {\n            console.log('Pressed Enter in search,', e.target.value);\n            this.setState({\n                redirect: `/search/${e.target.value}`\n            });\n        }\n    }\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={this.state.redirect}/>\n        } else {\n            return (\n                <header>\n                    <div class=\"netflixLogo\">\n                        <a id=\"logo\" href=\"#home\"><img src=\"https://image.tmdb.org/t/p/w500/wwemzKWzjKYJFfCeiB57q3r4Bcm.png\" alt=\"\" /></a>\n                    </div>      \n                    <nav class=\"main-nav\">    \n                        <Link to=\"/\">Home</Link>\n                        <Link to=\"/genre/28/Action\">Action</Link>\n                        <Link to=\"/genre/35/Comedy\">Comedy</Link>\n                        <Link to=\"/genre/18/Drama\">Drama</Link>\n                        <Link to=\"/genre/10751/Family\">Family</Link>\n                        <Link to=\"/genre/878/SciFi\">SciFi</Link>\n                    </nav>\n                    <nav class=\"sub-nav\">\n                        <input class=\"search-box\" onKeyPress={this.handleSubmit.bind(this)}></input>\n                        <a><i class=\"fas fa-search sub-nav-logo\"></i></a>\n                    </nav>      \n                </header>\n            )\n        }\n    };\n};\n\nexport default NavigationBar;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        api_key: '6e81589cc4f6c820c3a735a5b8caae78'\n    }\n});","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchMoviesByGenre } from '../actions';\n\nclass Category extends React.Component {\n    render() {\n        if (this.props.genre) {\n            return (\n                <div>\n                    <h1 id=\"home\">{this.props.title}</h1>\n                    <div class=\"box\">\n                        {this.renderImages()}\n                    </div>\n                </div> \n            )\n        } else {\n            return (\n                <div>\n                    <h1 id=\"home\">{this.props.title}</h1>\n                    <div class=\"box\">\n                        Loading...\n                    </div>\n                </div> \n            )\n        }\n    };\n\n    renderImages() {\n        return this.props.genre.movies.map(movie => {\n            return (\n                <Link to={`/movie/${movie.id}`} ><img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={movie.title} /></Link>\n            )\n        })\n    };\n\n    componentDidMount() {\n        this.props.fetchMoviesByGenre(this.props.genreId);\n    }\n};\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return { genre: state.genreMovies.find(genre => genre.genreId === ownProps.genreId) }\n}\n\nexport default connect(\n    mapStateToProps,\n    {fetchMoviesByGenre}\n)(Category);","import movieDBApi from '../apis/movieDBApi';\n\nexport const fetchMoviesByGenre = (genreId) => async dispatch => {\n    const response = await movieDBApi.get(`discover/movie?with_genres=${genreId}`);\n\n    dispatch({ type: 'FETCH_MOVIES_BY_GENRE', payload: {\n        genreId: genreId,\n        movies: response.data.results\n    }});\n};\n\nexport const fetchMovie = (movieId) => async dispatch => {\n    const response = await movieDBApi.get(`/movie/${movieId}`);\n    \n    dispatch({ type: 'FETCH_MOVIE', payload: response.data });\n};\n\nexport const searchMovies = (searchString) => async dispatch => {\n    const response = await movieDBApi.get(`/search/movie?query=${searchString}`);\n\n    dispatch({ type: 'SEARCH_MOVIES', payload: response.data.results });\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { searchMovies } from '../actions';\n\nclass Category extends React.Component {\n    render() {\n        if (this.props.searchResults && this.props.searchResults.length !== 0) {\n            return (\n                <div>\n                    <h1 id=\"home\">Search results</h1>\n                    <div class=\"box\">\n                        {this.renderImages()}\n                    </div>\n                </div> \n            )\n        } else {\n            return (\n                <div>\n                    <h1 id=\"home\">Search results</h1>\n                    <div class=\"box\">\n                        Loading...\n                    </div>\n                </div> \n            )\n        }\n    };\n\n    renderImages() {\n        return this.props.searchResults.map(movie => {\n            return (\n                <Link to={`movie/${movie.id}`} ><img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={movie.title} /></Link>\n            )\n        })\n    };\n\n    componentDidMount() {\n        this.props.searchMovies(this.props.searchTerm);\n    }\n};\n\n\nconst mapStateToProps = (state) => {\n    return { searchResults: state.searchResults }\n}\n\nexport default connect(\n    mapStateToProps,\n    {searchMovies}\n)(Category);","import React from 'react';\nimport Category from './Category';\nimport SearchResults from './SearchResults';\n\nclass CategoriesList extends React.Component {\n    render() {\n        return (\n            <section class=\"main-container\">\n                <div class=\"location\" id=\"home\">\n                    {this.renderCategories()}\n                </div>\n            </section>\n        )\n    };\n    renderCategories() {\n        if (this.props.match && this.props.match.params.searchTerm) {\n            return <SearchResults searchTerm={this.props.match.params.searchTerm}/>\n        } else if (this.props.match && this.props.match.params.genreId) {\n            return (\n                <div>\n                    <Category key={`genreId-${this.props.match.params.genreId}`} title={this.props.match.params.genreName} genreId={this.props.match.params.genreId}/>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Category title=\"Adventure\" genreId=\"12\"/>\n                    <Category title=\"Animation\" genreId=\"16\"/>\n                    <Category title=\"Crime\" genreId=\"80\"/>\n                    <Category title=\"Documentary\" genreId=\"99\"/>\n                    <Category title=\"Romance\" genreId=\"10749\"/>\n                    <Category title=\"Thriller\" genreId=\"53\"/>\n                </div>\n            );\n        }\n    }\n};\n\nexport default CategoriesList;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMovie } from '../actions';\n\nclass MovieDetails extends React.Component {\n    render() {\n        if (this.props.movie) {\n            return (\n                <section class=\"main-container\">\n                    <div class=\"location\" id=\"movie-details\">\n                        <h1 id=\"movie-title\"><a onClick={() => {this.props.history.goBack()}}><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></a> {this.props.movie.original_title}</h1>\n                        <div class=\"movie-details\">\n                            <div className=\"details-description\">\n                                <div>\n                                    <b>Rating:</b> {this.props.movie.vote_average} ({this.props.movie.vote_count} votes)\n                                </div>\n                                <div>\n                                    {this.props.movie.overview}\n                                </div>\n                                <div>\n                                    <b>Runtime:</b> {this.props.movie.runtime} minutes\n                                </div>\n                                <button><i class=\"fa fa-play\" aria-hidden=\"true\"></i> Play</button>\n                            </div>\n                            <div className=\"details-image\">\n                                <img src={`https://image.tmdb.org/t/p/original/${this.props.movie.poster_path}`} alt={this.props.movie.original_title}/>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            )\n        } else {\n            return (\n                <section class=\"main-container\">\n                    <div class=\"location\" id=\"movie-details\">\n                        <h1 id=\"movie-title\"><a onClick={() => {this.props.history.goBack()}}><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></a> {this.props.movieId}</h1>\n                        <div class=\"box\">\n                            Loading ...\n                        </div>\n                    </div>\n                </section>\n            )\n        }\n    };\n\n    componentDidMount() {\n        this.props.fetchMovie(this.props.match.params.movieId);\n    }\n};\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return { movie: state.movies.find(movie => movie.id === Number(ownProps.match.params.movieId)) }\n}\n\nexport default connect(\n    mapStateToProps,\n    {fetchMovie}\n)(MovieDetails);","import React from 'react';\nimport NavigationBar from './NavigationBar';\nimport CategoriesList from './CategoriesList';\nimport MovieDetails from './MovieDetails';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nconst App = () => {\n    return (\n        <div className=\"wrapper\">\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <Route key=\"root-navigation\" path=\"/\" component={NavigationBar} />\n                <Route key=\"root-categories\" path=\"/\" exact component={CategoriesList} />\n                <Route key=\"genre\" path=\"/genre/:genreId/:genreName\" component={CategoriesList} />\n                <Route key=\"search\" path=\"/search/:searchTerm\" component={CategoriesList} />\n                <Route key=\"movie\" path=\"/movie/:movieId\" component={MovieDetails} />\n            </BrowserRouter>\n        </div>\n    );\n};\n\nexport default App;","import {combineReducers} from 'redux';\nimport moviesByGenreReducer from './moviesByGenreReducer';\nimport moviesReducer from './moviesReducer';\nimport searchReducer from './searchReducer';\n\nexport default combineReducers({ \n    genreMovies: moviesByGenreReducer,\n    movies: moviesReducer,\n    searchResults: searchReducer\n });","export default (state = [], action) => {\n    switch (action.type) {\n        case 'FETCH_MOVIES_BY_GENRE':\n            return [...state, action.payload];\n        default:\n            return state;\n    }\n};","export default (state = [], action) => {\n    switch (action.type) {\n        case 'FETCH_MOVIE':\n            return [...state, action.payload];\n        default:\n            return state;\n    }\n};","export default (state = [], action) => {\n    switch (action.type) {\n        case 'SEARCH_MOVIES':\n            return action.payload;\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}