{"version":3,"sources":["components/NavigationBar.js","apis/movieDBApi.js","components/Category.js","actions/index.js","components/SearchResults.js","components/CategoriesList.js","components/App.js","reducers/index.js","reducers/moviesByGenreReducer.js","reducers/moviesReducer.js","reducers/searchReducer.js","index.js"],"names":["NavigationBar","props","state","redirect","searchSubmitted","e","key","console","log","target","value","this","setState","to","class","id","href","src","alt","onKeyPress","handleSubmit","bind","React","Component","axios","create","baseURL","params","api_key","Category","genre","title","renderImages","movies","map","movie","poster_path","fetchMoviesByGenre","genreId","connect","ownProps","genreMovies","find","dispatch","a","movieDBApi","get","response","type","payload","data","results","searchResults","length","searchMovies","searchTerm","searchString","CategoriesList","renderCategories","match","SearchResults","genreName","App","className","basename","process","path","component","exact","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.9498779b.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nclass NavigationBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: '',\n            searchSubmitted: false\n        }\n    }\n    handleSubmit(e) {\n        if (e.key === 'Enter') {\n            console.log('Pressed Enter in search,', e.target.value);\n            this.setState({\n                redirect: `/search/${e.target.value}`,\n                searchSubmitted: true\n            });\n        }\n    }\n    render() {\n        if (this.state.searchSubmitted) {\n            return <Redirect to={this.state.redirect}/>\n        } else {\n            return (\n                <header>\n                    <div class=\"netflixLogo\">\n                        <a id=\"logo\" href=\"#home\"><img src=\"https://image.tmdb.org/t/p/w500/wwemzKWzjKYJFfCeiB57q3r4Bcm.png\" alt=\"\" /></a>\n                    </div>      \n                    <nav class=\"main-nav\">    \n                        <Link to=\"/\">Home</Link>\n                        <Link to=\"/genre/28/Action\">Action</Link>\n                        <Link to=\"/genre/35/Comedy\">Comedy</Link>\n                        <Link to=\"/genre/18/Drama\">Drama</Link>\n                        <Link to=\"/genre/10751/Family\">Family</Link>\n                        <Link to=\"/genre/878/SciFi\">SciFi</Link>\n                    </nav>\n                    <nav class=\"sub-nav\">\n                        <input class=\"search-box\" onKeyPress={this.handleSubmit.bind(this)}></input>\n                        <a><i class=\"fas fa-search sub-nav-logo\"></i></a>\n                    </nav>      \n                </header>\n            )\n        }\n    };\n};\n\nexport default NavigationBar;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        api_key: '6e81589cc4f6c820c3a735a5b8caae78'\n    }\n});","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchMoviesByGenre } from '../actions';\n\nclass Category extends React.Component {\n    render() {\n        if (this.props.genre) {\n            return (\n                <div>\n                    <h1 id=\"home\">{this.props.title}</h1>\n                    <div class=\"box\">\n                        {this.renderImages()}\n                    </div>\n                </div> \n            )\n        } else {\n            return (\n                <div>\n                    <h1 id=\"home\">{this.props.title}</h1>\n                    <div class=\"box\">\n                        Loading...\n                    </div>\n                </div> \n            )\n        }\n    };\n\n    renderImages() {\n        return this.props.genre.movies.map(movie => {\n            return (\n                <Link to={`movie/${movie.id}`} ><img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={movie.title} /></Link>\n            )\n        })\n    };\n\n    componentDidMount() {\n        this.props.fetchMoviesByGenre(this.props.genreId);\n    }\n};\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return { genre: state.genreMovies.find(genre => genre.genreId === ownProps.genreId) }\n}\n\nexport default connect(\n    mapStateToProps,\n    {fetchMoviesByGenre}\n)(Category);","import movieDBApi from '../apis/movieDBApi';\n\nexport const fetchMoviesByGenre = (genreId) => async dispatch => {\n    const response = await movieDBApi.get(`discover/movie?with_genres=${genreId}`);\n\n    dispatch({ type: 'FETCH_MOVIES_BY_GENRE', payload: {\n        genreId: genreId,\n        movies: response.data.results\n    }});\n};\n\nexport const fetchMovie = (movieId) => async dispatch => {\n    const response = await movieDBApi.get(`/movie/${movieId}`);\n\n    dispatch({ type: 'FETCH_MOVIE', payload: response.data.result });\n};\n\nexport const searchMovies = (searchString) => async dispatch => {\n    const response = await movieDBApi.get(`/search/movie?query=${searchString}`);\n\n    dispatch({ type: 'SEARCH_MOVIES', payload: response.data.results });\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { searchMovies } from '../actions';\n\nclass Category extends React.Component {\n    render() {\n        if (this.props.searchResults && this.props.searchResults.length !== 0) {\n            return (\n                <div>\n                    <h1 id=\"home\">Search results</h1>\n                    <div class=\"box\">\n                        {this.renderImages()}\n                    </div>\n                </div> \n            )\n        } else {\n            return (\n                <div>\n                    <h1 id=\"home\">Search results</h1>\n                    <div class=\"box\">\n                        Loading...\n                    </div>\n                </div> \n            )\n        }\n    };\n\n    renderImages() {\n        return this.props.searchResults.map(movie => {\n            return (\n                <Link to={`movie/${movie.id}`} ><img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={movie.title} /></Link>\n            )\n        })\n    };\n\n    componentDidMount() {\n        this.props.searchMovies(this.props.searchTerm);\n    }\n};\n\n\nconst mapStateToProps = (state) => {\n    return { searchResults: state.searchResults }\n}\n\nexport default connect(\n    mapStateToProps,\n    {searchMovies}\n)(Category);","import React from 'react';\nimport Category from './Category';\nimport SearchResults from './SearchResults';\n\nclass CategoriesList extends React.Component {\n    render() {\n        return (\n            <section class=\"main-container\">\n                <div class=\"location\" id=\"home\">\n                    {this.renderCategories()}\n                </div>\n            </section>\n        )\n    };\n    renderCategories() {\n        if (this.props.match && this.props.match.params.searchTerm) {\n            return <SearchResults searchTerm={this.props.match.params.searchTerm}/>\n        } else if (this.props.match && this.props.match.params.genreId) {\n            return (\n                <div>\n                    <Category key={`genreId-${this.props.match.params.genreId}`} title={this.props.match.params.genreName} genreId={this.props.match.params.genreId}/>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Category title=\"Adventure\" genreId=\"12\"/>\n                    <Category title=\"Animation\" genreId=\"16\"/>\n                    <Category title=\"Crime\" genreId=\"80\"/>\n                    <Category title=\"Documentary\" genreId=\"99\"/>\n                    <Category title=\"Romance\" genreId=\"10749\"/>\n                    <Category title=\"Thriller\" genreId=\"53\"/>\n                </div>\n            );\n        }\n    }\n};\n\nexport default CategoriesList;","import React from 'react';\nimport NavigationBar from './NavigationBar';\nimport CategoriesList from './CategoriesList';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nconst App = () => {\n    return (\n        <div className=\"wrapper\">\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <Route key=\"root-navigation\" path=\"/\" component={NavigationBar} />\n                <Route key=\"root-categories\" path=\"/\" exact component={CategoriesList} />\n                <Route key=\"genre\" path=\"/genre/:genreId/:genreName\" component={CategoriesList} />\n                <Route key=\"search\" path=\"/search/:searchTerm\" component={CategoriesList} />\n            </BrowserRouter>\n        </div>\n    );\n};\n\nexport default App;","import {combineReducers} from 'redux';\nimport moviesByGenreReducer from './moviesByGenreReducer';\nimport moviesReducer from './moviesReducer';\nimport searchReducer from './searchReducer';\n\nexport default combineReducers({ \n    genreMovies: moviesByGenreReducer,\n    movies: moviesReducer,\n    searchResults: searchReducer\n });","export default (state = [], action) => {\n    switch (action.type) {\n        case 'FETCH_MOVIES_BY_GENRE':\n            return [...state, action.payload];\n        default:\n            return state;\n    }\n};","export default (state = [], action) => {\n    switch (action.type) {\n        case 'FETCH_MOVIE':\n            return [...state, action.payload];\n        default:\n            return state;\n    }\n};","export default (state = [], action) => {\n    switch (action.type) {\n        case 'SEARCH_MOVIES':\n            return action.payload;\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}